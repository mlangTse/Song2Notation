{"ast":null,"code":"import { Element } from './element.js';\nimport { log } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (VibratoBracket.DEBUG) log('Vex.Flow.VibratoBracket', args);\n}\nclass VibratoBracket extends Element {\n  static get CATEGORY() {\n    return \"VibratoBracket\";\n  }\n  constructor(bracket_data) {\n    super();\n    if (bracket_data.start) this.start = bracket_data.start;\n    if (bracket_data.stop) this.stop = bracket_data.stop;\n    this.line = 1;\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n      vibrato_width: 0\n    };\n  }\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n  setHarsh(harsh) {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n    const y = this.start && this.start.checkStave().getYForTopText(this.line) || this.stop && this.stop.checkStave().getYForTopText(this.line) || 0;\n    const start_x = this.start && this.start.getAbsoluteX() || this.stop && this.stop.checkStave().getTieStartX() || 0;\n    const stop_x = this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5 || this.start && this.start.checkStave().getTieEndX() - 10 || 0;\n    this.render_options.vibrato_width = stop_x - start_x;\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\nVibratoBracket.DEBUG = false;\nexport { VibratoBracket };","map":{"version":3,"names":["Element","log","Vibrato","L","_len","arguments","length","args","Array","_key","VibratoBracket","DEBUG","CATEGORY","constructor","bracket_data","start","stop","line","render_options","harsh","wave_height","wave_width","wave_girth","vibrato_width","setLine","setHarsh","draw","ctx","checkContext","setRendered","y","checkStave","getYForTopText","start_x","getAbsoluteX","getTieStartX","stop_x","getWidth","getTieEndX","renderVibrato"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/vibratobracket.js"],"sourcesContent":["import { Element } from './element.js';\nimport { log } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\nclass VibratoBracket extends Element {\n    static get CATEGORY() {\n        return \"VibratoBracket\";\n    }\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\nVibratoBracket.DEBUG = false;\nexport { VibratoBracket };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}