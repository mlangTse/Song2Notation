{"ast":null,"code":"export class RuntimeError extends Error {\n  constructor(code) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    super('[RuntimeError] ' + code + ': ' + message);\n    this.code = code;\n  }\n}\nexport function globalObject() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  return Function('return this')();\n}\nexport function defined(x) {\n  let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'undefined';\n  let message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  if (x === undefined) {\n    throw new RuntimeError(code, message);\n  }\n  return x;\n}\nexport function log(block) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  globalObject().console.log(block + ': ' + line);\n}\nexport function warn() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  const line = args.join(' ');\n  const err = new Error();\n  globalObject().console.log('Warning: ', line, err.stack);\n}\nfunction roundN(x, n) {\n  return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\nexport function midLine(a, b) {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = roundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n}\nexport function prefix(text) {\n  return `vf-${text}`;\n}\nexport function normalizeAngle(a) {\n  a = a % (2 * Math.PI);\n  if (a < 0) {\n    a += 2 * Math.PI;\n  }\n  return a;\n}\nexport function sumArray(arr) {\n  return arr.reduce((a, b) => a + b, 0);\n}","map":{"version":3,"names":["RuntimeError","Error","constructor","code","message","arguments","length","undefined","globalObject","globalThis","self","window","global","Function","defined","x","log","block","_len","args","Array","_key","line","prototype","slice","call","join","console","warn","_len2","_key2","err","stack","roundN","n","parseInt","midLine","a","b","mid_line","prefix","text","normalizeAngle","Math","PI","sumArray","arr","reduce"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/util.js"],"sourcesContent":["export class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\nexport function prefix(text) {\n    return `vf-${text}`;\n}\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}