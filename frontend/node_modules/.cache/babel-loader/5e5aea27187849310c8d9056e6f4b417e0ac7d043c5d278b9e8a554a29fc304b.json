{"ast":null,"code":"import { Beam } from './beam.js';\nimport { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { Tables } from './tables.js';\nimport { TabTie } from './tabtie.js';\nimport { isStaveNote } from './typeguard.js';\nimport { log } from './util.js';\nimport { Voice } from './voice.js';\nfunction L() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (GraceNoteGroup.DEBUG) log('Vex.Flow.GraceNoteGroup', args);\n}\nclass GraceNoteGroup extends Modifier {\n  static get CATEGORY() {\n    return \"GraceNoteGroup\";\n  }\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = isStaveNote(note);\n      const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n      if (is_stavenote && note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prev_note = note;\n      }\n      group_list.push({\n        shift: shiftL,\n        gracenote_group,\n        spacing\n      });\n    }\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n    }\n    state.left_shift += group_shift;\n    return true;\n  }\n  constructor(grace_notes, show_slur) {\n    super();\n    this.preFormatted = false;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n    this.show_slur = show_slur;\n    this.slur = undefined;\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Tables.RESOLUTION\n    }).setStrict(false);\n    this.render_options = {\n      slur_y_shift: 0\n    };\n    this.beams = [];\n    this.voice.addTickables(this.grace_notes);\n    return this;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n    if (!this.formatter) {\n      this.formatter = new Formatter();\n    }\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n      this.beams.push(beam);\n    }\n    return this;\n  }\n  setWidth(width) {\n    this.width = width;\n    return this;\n  }\n  getWidth() {\n    return this.width + StaveNote.minNoteheadPadding;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    L('Drawing grace note group for:', note);\n    this.alignSubNotesWithNote(this.getGraceNotes(), note);\n    this.grace_notes.forEach(graceNote => graceNote.setContext(ctx).draw());\n    this.beams.forEach(beam => beam.setContext(ctx).draw());\n    if (this.show_slur) {\n      const is_stavenote = isStaveNote(note);\n      const TieClass = is_stavenote ? StaveTie : TabTie;\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0]\n      });\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(ctx).draw();\n    }\n  }\n}\nGraceNoteGroup.DEBUG = false;\nexport { GraceNoteGroup };","map":{"version":3,"names":["Beam","Formatter","Modifier","StaveNote","StaveTie","Tables","TabTie","isStaveNote","log","Voice","L","_len","arguments","length","args","Array","_key","GraceNoteGroup","DEBUG","CATEGORY","format","gracenote_groups","state","group_spacing_stave","group_spacing_tab","group_list","prev_note","shiftL","i","gracenote_group","note","getNote","is_stavenote","spacing","n","keys","Math","max","getLeftDisplacedHeadPx","push","shift","group_shift","formatWidth","preFormat","getWidth","setSpacingFromNextModifier","min","minNoteheadPadding","left_shift","constructor","grace_notes","show_slur","preFormatted","position","Position","LEFT","width","slur","undefined","voice","num_beats","beat_value","resolution","RESOLUTION","setStrict","render_options","slur_y_shift","beams","addTickables","formatter","joinVoices","setWidth","getMinTotalWidth","beamNotes","beam","beam_width","partial_beam_length","getGraceNotes","draw","ctx","checkContext","checkAttachedNote","setRendered","alignSubNotesWithNote","forEach","graceNote","setContext","TieClass","last_note","first_note","first_indices","last_indices","cp2","y_shift"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/gracenotegroup.js"],"sourcesContent":["import { Beam } from './beam.js';\nimport { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { Tables } from './tables.js';\nimport { TabTie } from './tabtie.js';\nimport { isStaveNote } from './typeguard.js';\nimport { log } from './util.js';\nimport { Voice } from './voice.js';\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\nclass GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return \"GraceNoteGroup\";\n    }\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note);\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\nexport { GraceNoteGroup };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}