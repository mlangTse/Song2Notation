{"ast":null,"code":"import { Glyph } from './glyph.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Note } from './note.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote } from './typeguard.js';\nexport class Parenthesis extends Modifier {\n  static get CATEGORY() {\n    return \"Parenthesis\";\n  }\n  static buildAndAttach(notes) {\n    for (const note of notes) {\n      for (let i = 0; i < note.keys.length; i++) {\n        note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n        note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n      }\n    }\n  }\n  static format(parentheses, state) {\n    if (!parentheses || parentheses.length === 0) return false;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    for (let i = 0; i < parentheses.length; ++i) {\n      const parenthesis = parentheses[i];\n      const note = parenthesis.getNote();\n      const pos = parenthesis.getPosition();\n      const index = parenthesis.checkIndex();\n      let shift = 0;\n      if (pos === ModifierPosition.RIGHT) {\n        shift = note.getRightParenthesisPx(index);\n        x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n      }\n      if (pos === ModifierPosition.LEFT) {\n        shift = note.getLeftParenthesisPx(index);\n        x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n      }\n      parenthesis.setXShift(shift);\n    }\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n  constructor(position) {\n    var _a;\n    super();\n    this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n    this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n    this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n  }\n  setNote(note) {\n    var _a, _b;\n    this.note = note;\n    this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n    this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    if (isGraceNote(note)) {\n      this.point = (_b = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point')) !== null && _b !== void 0 ? _b : Note.getPoint('gracenote');\n      this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n    }\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    const start = note.getModifierStartXY(this.position, this.index, {\n      forceFlagRight: true\n    });\n    const x = start.x + this.x_shift;\n    const y = start.y + this.y_shift;\n    if (this.position == Modifier.Position.RIGHT) {\n      Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n        category: `noteHead.standard.noteheadParenthesisRight`\n      });\n    } else if (this.position == Modifier.Position.LEFT) {\n      Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n        category: `noteHead.standard.noteheadParenthesisLeft`\n      });\n    }\n  }\n}","map":{"version":3,"names":["Glyph","Modifier","ModifierPosition","Note","Tables","isGraceNote","Parenthesis","CATEGORY","buildAndAttach","notes","note","i","keys","length","addModifier","LEFT","RIGHT","format","parentheses","state","x_widthL","x_widthR","parenthesis","getNote","pos","getPosition","index","checkIndex","shift","getRightParenthesisPx","width","getLeftParenthesisPx","setXShift","left_shift","right_shift","constructor","position","_a","Position","point","currentMusicFont","lookupMetric","getPoint","setWidth","setNote","_b","draw","ctx","checkContext","checkAttachedNote","setRendered","start","getModifierStartXY","forceFlagRight","x","x_shift","y","y_shift","renderGlyph","category"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/parenthesis.js"],"sourcesContent":["import { Glyph } from './glyph.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Note } from './note.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote } from './typeguard.js';\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return \"Parenthesis\";\n    }\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    constructor(position) {\n        var _a;\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    setNote(note) {\n        var _a, _b;\n        this.note = note;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = (_b = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point')) !== null && _b !== void 0 ? _b : Note.getPoint('gracenote');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}