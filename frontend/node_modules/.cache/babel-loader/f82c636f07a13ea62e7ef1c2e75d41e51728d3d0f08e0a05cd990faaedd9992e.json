{"ast":null,"code":"import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier } from './stavemodifier.js';\nimport { TextFormatter } from './textformatter.js';\nclass StaveSection extends StaveModifier {\n  static get CATEGORY() {\n    return \"StaveSection\";\n  }\n  constructor(section, x, shift_y) {\n    let drawRect = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    super();\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.drawRect = drawRect;\n    this.resetFont();\n  }\n  setStaveSection(section) {\n    this.section = section;\n    return this;\n  }\n  setShiftX(x) {\n    this.shift_x = x;\n    return this;\n  }\n  setShiftY(y) {\n    this.shift_y = y;\n    return this;\n  }\n  draw(stave, shift_x) {\n    const borderWidth = 2;\n    const padding = 2;\n    const ctx = stave.checkContext();\n    this.setRendered();\n    ctx.save();\n    ctx.setLineWidth(borderWidth);\n    ctx.setFont(this.textFont);\n    const textFormatter = TextFormatter.create(this.textFont);\n    const textWidth = textFormatter.getWidthForTextInPx(this.section);\n    const textY = textFormatter.getYForStringInPx(this.section);\n    const textHeight = textY.height;\n    const headroom = -1 * textY.yMin;\n    const width = textWidth + 2 * padding;\n    const height = textHeight + 2 * padding;\n    const y = stave.getYForTopText(1.5) + this.shift_y;\n    const x = this.x + shift_x;\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(x, y - height + headroom, width, height);\n      ctx.stroke();\n    }\n    ctx.fillText(this.section, x + padding, y - padding);\n    ctx.restore();\n    return this;\n  }\n}\nStaveSection.TEXT_FONT = {\n  family: Font.SANS_SERIF,\n  size: 10,\n  weight: FontWeight.BOLD,\n  style: FontStyle.NORMAL\n};\nexport { StaveSection };","map":{"version":3,"names":["Font","FontStyle","FontWeight","StaveModifier","TextFormatter","StaveSection","CATEGORY","constructor","section","x","shift_y","drawRect","arguments","length","undefined","setWidth","shift_x","resetFont","setStaveSection","setShiftX","setShiftY","y","draw","stave","borderWidth","padding","ctx","checkContext","setRendered","save","setLineWidth","setFont","textFont","textFormatter","create","textWidth","getWidthForTextInPx","textY","getYForStringInPx","textHeight","height","headroom","yMin","width","getYForTopText","beginPath","rect","stroke","fillText","restore","TEXT_FONT","family","SANS_SERIF","size","weight","BOLD","style","NORMAL"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/stavesection.js"],"sourcesContent":["import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier } from './stavemodifier.js';\nimport { TextFormatter } from './textformatter.js';\nclass StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveSection\";\n    }\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        ctx.setFont(this.textFont);\n        const textFormatter = TextFormatter.create(this.textFont);\n        const textWidth = textFormatter.getWidthForTextInPx(this.section);\n        const textY = textFormatter.getYForStringInPx(this.section);\n        const textHeight = textY.height;\n        const headroom = -1 * textY.yMin;\n        const width = textWidth + 2 * padding;\n        const height = textHeight + 2 * padding;\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { StaveSection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}