{"ast":null,"code":"import { Font } from '../font.js';\nimport { TextFormatter } from '../textformatter.js';\nimport { PetalumaScriptFont } from './petalumascript_glyphs.js';\nimport { RobotoSlabFont } from './robotoslab_glyphs.js';\nimport { SansFontBold } from './sans_bold_text_metrics.js';\nimport { SansFont } from './sans_text_metrics.js';\nimport { SerifFont } from './serif_text_metrics.js';\nexport function loadTextFonts() {\n  {\n    const fontData = SansFontBold;\n    const {\n      fontFamily,\n      resolution,\n      glyphs\n    } = fontData;\n    Font.load(fontFamily, fontData);\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: true,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Generic SANS font'\n    });\n  }\n  {\n    const fontData = SansFont;\n    const {\n      fontFamily,\n      resolution,\n      glyphs\n    } = fontData;\n    Font.load(fontFamily, fontData);\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Generic SANS font'\n    });\n  }\n  {\n    const fontData = SerifFont;\n    const {\n      fontFamily,\n      resolution,\n      glyphs\n    } = fontData;\n    Font.load(fontFamily, fontData);\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: true,\n      description: 'Generic SERIF font'\n    });\n  }\n  {\n    const fontData = RobotoSlabFont;\n    const {\n      fontFamily,\n      resolution,\n      glyphs\n    } = fontData;\n    Font.load(fontFamily, fontData);\n    const maxSizeGlyph = 'b';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: true,\n      description: 'Text font to pair with the Bravura / Gonville music fonts.'\n    });\n  }\n  {\n    const fontData = PetalumaScriptFont;\n    const {\n      fontFamily,\n      resolution,\n      glyphs\n    } = fontData;\n    Font.load(fontFamily, fontData);\n    const maxSizeGlyph = 'b';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Text font to pair with the Petaluma music font.'\n    });\n  }\n}","map":{"version":3,"names":["Font","TextFormatter","PetalumaScriptFont","RobotoSlabFont","SansFontBold","SansFont","SerifFont","loadTextFonts","fontData","fontFamily","resolution","glyphs","load","maxSizeGlyph","registerInfo","family","monospaced","bold","italic","superscriptOffset","subscriptOffset","serifs","description"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/fonts/textfonts.js"],"sourcesContent":["import { Font } from '../font.js';\nimport { TextFormatter } from '../textformatter.js';\nimport { PetalumaScriptFont } from './petalumascript_glyphs.js';\nimport { RobotoSlabFont } from './robotoslab_glyphs.js';\nimport { SansFontBold } from './sans_bold_text_metrics.js';\nimport { SansFont } from './sans_text_metrics.js';\nimport { SerifFont } from './serif_text_metrics.js';\nexport function loadTextFonts() {\n    {\n        const fontData = SansFontBold;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: true,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    {\n        const fontData = SansFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    {\n        const fontData = SerifFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Generic SERIF font',\n        });\n    }\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}