{"ast":null,"code":"import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport var VoltaType;\n(function (VoltaType) {\n  VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n  VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n  VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n  VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n  VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nclass Volta extends StaveModifier {\n  static get CATEGORY() {\n    return \"Volta\";\n  }\n  static get type() {\n    return VoltaType;\n  }\n  constructor(type, number, x, y_shift) {\n    super();\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.resetFont();\n  }\n  setShiftY(y) {\n    this.y_shift = y;\n    return this;\n  }\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n    let width = stave.getWidth() - x;\n    const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    const vert_height = 1.5 * stave.getSpacingBetweenLines();\n    switch (this.volta) {\n      case VoltaType.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case VoltaType.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case VoltaType.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\nVolta.TEXT_FONT = {\n  family: Font.SANS_SERIF,\n  size: 9,\n  weight: FontWeight.BOLD,\n  style: FontStyle.NORMAL\n};\nexport { Volta };","map":{"version":3,"names":["Font","FontStyle","FontWeight","StaveModifier","VoltaType","Volta","CATEGORY","type","constructor","number","x","y_shift","volta","resetFont","setShiftY","y","draw","stave","ctx","checkContext","setRendered","width","getWidth","top_y","getYForTopText","getNumLines","vert_height","getSpacingBetweenLines","BEGIN","fillRect","END","BEGIN_END","save","setFont","textFont","fillText","restore","TEXT_FONT","family","SANS_SERIF","size","weight","BOLD","style","NORMAL"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/stavevolta.js"],"sourcesContent":["import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nclass Volta extends StaveModifier {\n    static get CATEGORY() {\n        return \"Volta\";\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x;\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nexport { Volta };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}