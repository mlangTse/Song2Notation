{"ast":null,"code":"import { Bend } from './bend.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nexport class Vibrato extends Modifier {\n  static get CATEGORY() {\n    return \"Vibrato\";\n  }\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n    const bends = context.getMembers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      const bendHeight = bends.map(bb => bb.getTextHeight()).reduce((a, b) => a > b ? a : b) / Tables.STAVE_LINE_DISTANCE;\n      text_line = text_line - (bendHeight + 1);\n    } else {\n      state.top_text_line += 1;\n    }\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n    state.right_shift += width;\n    return true;\n  }\n  constructor() {\n    super();\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2\n    };\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  setHarsh(harsh) {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n    const vx = start.x + this.x_shift;\n    const vy = note.getYForTopText(this.text_line) + 2;\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n  static renderVibrato(ctx, x, y, opts) {\n    const {\n      harsh,\n      vibrato_width,\n      wave_width,\n      wave_girth,\n      wave_height\n    } = opts;\n    const num_waves = vibrato_width / wave_width;\n    ctx.beginPath();\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - wave_height / 2);\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + wave_height / 2);\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}","map":{"version":3,"names":["Bend","Modifier","Tables","Vibrato","CATEGORY","format","vibratos","state","context","length","text_line","top_text_line","width","shift","right_shift","bends","getMembers","bendHeight","map","bb","getTextHeight","reduce","a","b","STAVE_LINE_DISTANCE","i","vibrato","setXShift","setTextLine","getWidth","constructor","position","Position","RIGHT","render_options","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","setWidth","draw","ctx","checkContext","note","checkAttachedNote","setRendered","start","getModifierStartXY","index","vx","x","x_shift","vy","getYForTopText","renderVibrato","y","opts","num_waves","beginPath","moveTo","lineTo","fill","quadraticCurveTo"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/vibrato.js"],"sourcesContent":["import { Bend } from './bend.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return \"Vibrato\";\n    }\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}