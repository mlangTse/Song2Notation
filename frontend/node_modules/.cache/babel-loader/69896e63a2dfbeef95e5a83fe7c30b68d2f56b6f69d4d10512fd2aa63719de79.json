{"ast":null,"code":"import { Element } from './element.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (Stem.DEBUG) log('Vex.Flow.Stem', args);\n}\nclass Stem extends Element {\n  static get CATEGORY() {\n    return \"Stem\";\n  }\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n  static get WIDTH() {\n    return Tables.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Tables.STEM_HEIGHT;\n  }\n  constructor(options) {\n    super();\n    this.stem_up_y_offset = 0;\n    this.stem_down_y_offset = 0;\n    this.stem_up_y_base_offset = 0;\n    this.stem_down_y_base_offset = 0;\n    this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n    this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n    this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n    this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n    this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n    this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n    this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n    this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n    this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n    this.renderHeightAdjustment = 0;\n    this.setOptions(options);\n  }\n  setOptions(options) {\n    this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n    this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n    this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n    this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n  }\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n  setDirection(direction) {\n    this.stem_direction = direction;\n  }\n  setExtension(ext) {\n    this.stem_extension = ext;\n  }\n  getExtension() {\n    return this.stem_extension;\n  }\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n  getHeight() {\n    const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n    const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension);\n    return unsigned_height * this.stem_direction;\n  }\n  getBoundingBox() {\n    throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n    return {\n      topY: stemTipY,\n      baseY: outerMostNoteheadY\n    };\n  }\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n  adjustHeightForFlag() {\n    this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n  }\n  adjustHeightForBeam() {\n    this.renderHeightAdjustment = -Stem.WIDTH / 2;\n  }\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n    let y_base_offset = 0;\n    if (stem_direction === Stem.DOWN) {\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n      y_base_offset = this.stem_down_y_base_offset;\n    } else {\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n      y_base_offset = this.stem_up_y_base_offset;\n    }\n    const stemHeight = this.getHeight();\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n    const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n    ctx.save();\n    this.applyStyle();\n    ctx.openGroup('stem', this.getAttribute('id'), {\n      pointerBBox: true\n    });\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n    ctx.stroke();\n    ctx.closeGroup();\n    this.restoreStyle();\n    ctx.restore();\n  }\n}\nStem.DEBUG = false;\nexport { Stem };","map":{"version":3,"names":["Element","Tables","log","RuntimeError","L","_len","arguments","length","args","Array","_key","Stem","DEBUG","CATEGORY","UP","DOWN","WIDTH","STEM_WIDTH","HEIGHT","STEM_HEIGHT","constructor","options","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setOptions","setNoteHeadXBounds","setDirection","direction","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","unsigned_height","getBoundingBox","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","Math","min","max","outerMostNoteheadY","stemTipY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","currentMusicFont","lookupMetric","adjustHeightForBeam","draw","setRendered","ctx","checkContext","stem_x","stem_y","y_base_offset","stemletYOffset","save","applyStyle","openGroup","getAttribute","pointerBBox","beginPath","setLineWidth","moveTo","lineTo","stroke","closeGroup","restoreStyle","restore"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/stem.js"],"sourcesContent":["import { Element } from './element.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nclass Stem extends Element {\n    static get CATEGORY() {\n        return \"Stem\";\n    }\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension);\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nStem.DEBUG = false;\nexport { Stem };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}