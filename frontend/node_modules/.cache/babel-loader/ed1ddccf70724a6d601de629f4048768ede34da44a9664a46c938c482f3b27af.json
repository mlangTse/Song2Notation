{"ast":null,"code":"import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Glyph } from './glyph.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (PedalMarking.DEBUG) log('Vex.Flow.PedalMarking', args);\n}\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point, {\n    category: 'pedalMarking'\n  });\n  glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\nclass PedalMarking extends Element {\n  static get CATEGORY() {\n    return \"PedalMarking\";\n  }\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n  constructor(notes) {\n    super();\n    this.notes = notes;\n    this.type = PedalMarking.type.TEXT;\n    this.line = 0;\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n    this.resetFont();\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      color: 'black'\n    };\n  }\n  setType(type) {\n    type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n    if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n      this.type = type;\n    }\n    return this;\n  }\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n  drawBracketed() {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    this.notes.forEach((note, index, notes) => {\n      var _a;\n      is_pedal_depressed = !is_pedal_depressed;\n      const x = note.getAbsoluteX();\n      const y = note.checkStave().getYForBottomText(this.line + 3);\n      if (x < prev_x) {\n        throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n      }\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n      let x_shift = 0;\n      const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n      if (is_pedal_depressed) {\n        x_shift = prev_is_same ? 5 : 0;\n        if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n          if (this.custom_depress_text) {\n            const text_width = ctx.measureText(this.custom_depress_text).width;\n            ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n            x_shift = text_width / 2 + this.render_options.text_margin_right;\n          } else {\n            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            x_shift = 20 + this.render_options.text_margin_right;\n          }\n        } else {\n          ctx.beginPath();\n          ctx.moveTo(x, y - this.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        x_shift = next_is_same ? -5 : 0;\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - this.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n  drawText() {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n    this.notes.forEach(note => {\n      var _a;\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.checkStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(this.line + 3);\n      const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (this.custom_depress_text) {\n          text_width = ctx.measureText(this.custom_depress_text).width;\n          ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (this.custom_release_text) {\n          text_width = ctx.measureText(this.custom_release_text).width;\n          ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.textFont);\n    L('Rendering Pedal Marking');\n    if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.type === PedalMarking.type.TEXT) {\n      this.drawText();\n    }\n    ctx.restore();\n  }\n}\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n  family: Font.SERIF,\n  size: 12,\n  weight: FontWeight.BOLD,\n  style: FontStyle.ITALIC\n};\nPedalMarking.GLYPHS = {\n  pedal_depress: {\n    code: 'keyboardPedalPed'\n  },\n  pedal_release: {\n    code: 'keyboardPedalUp'\n  }\n};\nPedalMarking.type = {\n  TEXT: 1,\n  BRACKET: 2,\n  MIXED: 3\n};\nPedalMarking.typeString = {\n  text: PedalMarking.type.TEXT,\n  bracket: PedalMarking.type.BRACKET,\n  mixed: PedalMarking.type.MIXED\n};\nexport { PedalMarking };","map":{"version":3,"names":["Element","Font","FontStyle","FontWeight","Glyph","Tables","log","RuntimeError","L","_len","arguments","length","args","Array","_key","PedalMarking","DEBUG","drawPedalGlyph","name","context","x","y","point","glyph_data","GLYPHS","glyph","code","category","render","getMetrics","width","STAVE_LINE_DISTANCE","CATEGORY","createSustain","notes","pedal","createSostenuto","setType","type","MIXED","setCustomText","createUnaCorda","TEXT","constructor","line","custom_depress_text","custom_release_text","resetFont","render_options","bracket_height","text_margin_right","bracket_line_width","color","typeString","depress","release","setLine","drawBracketed","ctx","checkContext","is_pedal_depressed","prev_x","prev_y","forEach","note","index","_a","getAbsoluteX","checkStave","getYForBottomText","next_is_same","prev_is_same","x_shift","currentMusicFont","lookupMetric","NOTATION_FONT_SCALE","text_width","measureText","fillText","beginPath","moveTo","lineTo","stroke","closePath","drawText","stave","draw","setRendered","save","setStrokeStyle","setFillStyle","setFont","textFont","BRACKET","setLineWidth","restore","TEXT_FONT","family","SERIF","size","weight","BOLD","style","ITALIC","pedal_depress","pedal_release","text","bracket","mixed"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/pedalmarking.js"],"sourcesContent":["import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Glyph } from './glyph.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\nclass PedalMarking extends Element {\n    static get CATEGORY() {\n        return \"PedalMarking\";\n    }\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        this.notes.forEach((note, index, notes) => {\n            var _a;\n            is_pedal_depressed = !is_pedal_depressed;\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            if (is_pedal_depressed) {\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    if (this.custom_depress_text) {\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                x_shift = next_is_same ? -5 : 0;\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        this.notes.forEach((note) => {\n            var _a;\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n    },\n};\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\nexport { PedalMarking };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}