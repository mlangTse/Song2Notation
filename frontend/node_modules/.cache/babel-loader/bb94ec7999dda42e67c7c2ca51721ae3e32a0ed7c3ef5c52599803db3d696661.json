{"ast":null,"code":"import { Glyph } from './glyph.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { defined } from './util.js';\nclass KeySignature extends StaveModifier {\n  static get CATEGORY() {\n    return \"KeySignature\";\n  }\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.accList = [];\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifierPosition.BEGIN);\n    this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n    this.glyphs = [];\n    this.xPositions = [];\n    this.paddingForced = false;\n  }\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Tables.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n    this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n    this.glyphs.push(glyph);\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    this.xPositions.push(xPosition + glyphWidth);\n    this.width += glyphWidth;\n  }\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n    return this;\n  }\n  convertToCancelAccList(spec) {\n    const cancel_accList = Tables.keySignature(spec);\n    const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n    const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n    if (naturals < 1) return undefined;\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n      const acc = cancel_accList[index];\n      cancelled.push({\n        type: 'n',\n        line: acc.line\n      });\n    }\n    this.accList = cancelled.concat(this.accList);\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type\n    };\n  }\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n    return this;\n  }\n  convertAccLines(clef, type) {\n    let accList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.accList;\n    let offset = 0.0;\n    let customLines;\n    switch (clef) {\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n  getPadding(index) {\n    if (!this.formatted) this.format();\n    return this.glyphs.length === 0 || !this.paddingForced && index < 2 ? 0 : this.padding;\n  }\n  getWidth() {\n    if (!this.formatted) this.format();\n    return this.width;\n  }\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n    return this;\n  }\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n    return this;\n  }\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n  format() {\n    const stave = this.checkStave();\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0];\n    this.accList = Tables.keySignature(defined(this.keySpec));\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n    if (this.accList.length > 0) {\n      const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n    this.formatted = true;\n  }\n  getGlyphs() {\n    if (!this.formatted) this.format();\n    return this.glyphs;\n  }\n  draw() {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    if (!this.formatted) this.format();\n    this.setRendered();\n    this.applyStyle(ctx);\n    ctx.openGroup('keysignature', this.getAttribute('id'));\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(stave);\n      glyph.setContext(ctx);\n      glyph.renderToStave(x);\n    }\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}\nKeySignature.accidentalSpacing = {\n  '#': {\n    above: 6,\n    below: 4\n  },\n  b: {\n    above: 4,\n    below: 7\n  },\n  n: {\n    above: 4,\n    below: 1\n  },\n  '##': {\n    above: 6,\n    below: 4\n  },\n  bb: {\n    above: 4,\n    below: 7\n  },\n  db: {\n    above: 4,\n    below: 7\n  },\n  d: {\n    above: 4,\n    below: 7\n  },\n  bbs: {\n    above: 4,\n    below: 7\n  },\n  '++': {\n    above: 6,\n    below: 4\n  },\n  '+': {\n    above: 6,\n    below: 4\n  },\n  '+-': {\n    above: 6,\n    below: 4\n  },\n  '++-': {\n    above: 6,\n    below: 4\n  },\n  bs: {\n    above: 4,\n    below: 10\n  },\n  bss: {\n    above: 4,\n    below: 10\n  }\n};\nexport { KeySignature };","map":{"version":3,"names":["Glyph","StaveModifier","StaveModifierPosition","Tables","defined","KeySignature","CATEGORY","constructor","keySpec","cancelKeySpec","alterKeySpec","accList","setKeySig","setPosition","BEGIN","glyphFontScale","NOTATION_FONT_SCALE","glyphs","xPositions","paddingForced","convertToGlyph","acc","nextAcc","accGlyphData","accidentalCodes","type","glyph","code","extraWidth","spacing","accidentalSpacing","isAbove","line","above","below","placeGlyphOnLine","checkStave","push","xPosition","length","glyphWidth","getMetrics","width","cancelKey","spec","formatted","convertToCancelAccList","cancel_accList","keySignature","different_types","naturals","undefined","cancelled","i","index","concat","addToStave","stave","addModifier","convertAccLines","clef","arguments","offset","customLines","getPadding","format","padding","getWidth","alterKey","convertToAlterAccList","max","Math","min","firstAccidentalType","cancelAccList","position","END","getEndClef","getClef","getGlyphs","draw","ctx","checkContext","setRendered","applyStyle","openGroup","getAttribute","x","setStave","setContext","renderToStave","closeGroup","restoreStyle","b","n","bb","db","d","bbs","bs","bss"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/keysignature.js"],"sourcesContent":["import { Glyph } from './glyph.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { defined } from './util.js';\nclass KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return \"KeySignature\";\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n        this.glyphs = [];\n        this.xPositions = [];\n        this.paddingForced = false;\n    }\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        this.xPositions.push(xPosition + glyphWidth);\n        this.width += glyphWidth;\n    }\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        const cancel_accList = Tables.keySignature(spec);\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        if (naturals < 1)\n            return undefined;\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0;\n        let customLines;\n        switch (clef) {\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0];\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\nexport { KeySignature };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}