{"ast":null,"code":"import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Tickable extends Element {\n  static get CATEGORY() {\n    return \"Tickable\";\n  }\n  constructor() {\n    super();\n    this._preFormatted = false;\n    this._postFormatted = false;\n    this.ticks = new Fraction(0, 1);\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n    this.width = 0;\n    this.x_shift = 0;\n    this.modifiers = [];\n    this.tupletStack = [];\n    this.align_center = false;\n    this.center_x_shift = 0;\n    this.ignore_ticks = false;\n    this.formatterMetrics = {\n      freedom: {\n        left: 0,\n        right: 0\n      },\n      duration: '',\n      iterations: 0,\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0\n      }\n    };\n  }\n  reset() {\n    return this;\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  shouldIgnoreTicks() {\n    return this.ignore_ticks;\n  }\n  setIgnoreTicks(flag) {\n    this.ignore_ticks = flag;\n    return this;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    if (!this._preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n  setXShift(x) {\n    this.x_shift = x;\n    return this;\n  }\n  getXShift() {\n    return this.x_shift;\n  }\n  getX() {\n    const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n    return tickContext.getX() + this.x_shift;\n  }\n  getFormatterMetrics() {\n    return this.formatterMetrics;\n  }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n    return 0;\n  }\n  setCenterXShift(centerXShift) {\n    this.center_x_shift = centerXShift;\n    return this;\n  }\n  isCenterAligned() {\n    return this.align_center;\n  }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n  getVoice() {\n    return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n  }\n  setVoice(voice) {\n    this.voice = voice;\n  }\n  getTuplet() {\n    return this.tuplet;\n  }\n  getTupletStack() {\n    return this.tupletStack;\n  }\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n  setTuplet(tuplet) {\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n    this.tuplet = tuplet;\n    return this;\n  }\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addMember(this.modifiers[i]);\n    }\n    this.modifierContext.addMember(this);\n    this._preFormatted = false;\n    return this;\n  }\n  addModifier(modifier) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.modifiers.push(modifier);\n    this._preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this._preFormatted = false;\n  }\n  checkTickContext() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Tickable has no tick context.';\n    return defined(this.tickContext, 'NoTickContext', message);\n  }\n  preFormat() {\n    if (this._preFormatted) return;\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  set preFormatted(value) {\n    this._preFormatted = value;\n  }\n  get preFormatted() {\n    return this._preFormatted;\n  }\n  postFormat() {\n    if (this._postFormatted) return this;\n    this._postFormatted = true;\n    return this;\n  }\n  set postFormatted(value) {\n    this._postFormatted = value;\n  }\n  get postFormatted() {\n    return this._postFormatted;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n  getAbsoluteX() {\n    const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n    return tickContext.getX();\n  }\n  setModifierContext(mc) {\n    this.modifierContext = mc;\n    return this;\n  }\n  getModifierContext() {\n    return this.modifierContext;\n  }\n  checkModifierContext() {\n    return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n  }\n}","map":{"version":3,"names":["Element","Fraction","Tables","defined","RuntimeError","Tickable","CATEGORY","constructor","_preFormatted","_postFormatted","ticks","intrinsicTicks","tickMultiplier","width","x_shift","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","left","right","duration","iterations","space","used","mean","deviation","reset","getTicks","shouldIgnoreTicks","setIgnoreTicks","flag","setWidth","getWidth","modifierContext","setXShift","x","getXShift","getX","tickContext","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","voice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","i","indexOf","splice","getNoteCount","getNotesOccupied","applyTickMultiplier","length","pop","setTuplet","push","addToModifierContext","mc","addMember","addModifier","modifier","index","arguments","undefined","getModifiers","setTickContext","tc","message","preFormat","preFormatted","value","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","clone","multiply","getTickMultiplier","numerator","denominator","setDuration","RESOLUTION","getAbsoluteX","setModifierContext","getModifierContext","checkModifierContext"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/tickable.js"],"sourcesContent":["import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return \"Tickable\";\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        this.ticks = new Fraction(0, 1);\n        this.intrinsicTicks = 0;\n        this.tickMultiplier = new Fraction(1, 1);\n        this.width = 0;\n        this.x_shift = 0;\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0;\n        this.ignore_ticks = false;\n        this.formatterMetrics = {\n            freedom: { left: 0, right: 0 },\n            duration: '',\n            iterations: 0,\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    reset() {\n        return this;\n    }\n    getTicks() {\n        return this.ticks;\n    }\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n    }\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    isCenterAligned() {\n        return this.align_center;\n    }\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    getTuplet() {\n        return this.tuplet;\n    }\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    getModifiers() {\n        return this.modifiers;\n    }\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}