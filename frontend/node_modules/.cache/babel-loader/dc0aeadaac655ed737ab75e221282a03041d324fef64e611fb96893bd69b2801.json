{"ast":null,"code":"import { Glyph } from './glyph.js';\nimport { defined } from './util.js';\nexport class TimeSignatureGlyph extends Glyph {\n  constructor(timeSignature, topDigits, botDigits, code, point, options) {\n    var _a;\n    super(code, point, options);\n    this.timeSignature = timeSignature;\n    this.topGlyphs = [];\n    this.botGlyphs = [];\n    let topWidth = 0;\n    let height = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      let timeSigType = topDigits[i];\n      switch (topDigits[i]) {\n        case '-':\n          timeSigType = 'Minus';\n          break;\n        case '+':\n          timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n          break;\n        case '(':\n          timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n          break;\n        case ')':\n          timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n          break;\n      }\n      const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n      this.topGlyphs.push(topGlyph);\n      topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n      height = Math.max(height, topGlyph.getMetrics().height);\n    }\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      let timeSigType = botDigits[i];\n      switch (botDigits[i]) {\n        case '+':\n          timeSigType = 'PlusSmall';\n          break;\n        case '(':\n          timeSigType = 'ParensLeftSmall';\n          break;\n        case ')':\n          timeSigType = 'ParensRightSmall';\n          break;\n      }\n      const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n      this.botGlyphs.push(botGlyph);\n      botWidth += defined(botGlyph.getMetrics().width);\n      height = Math.max(height, botGlyph.getMetrics().height);\n    }\n    this.lineShift = height > 22 ? 1 : 0;\n    this.width = Math.max(topWidth, botWidth);\n    this.xMin = this.getMetrics().x_min;\n    this.topStartX = (this.width - topWidth) / 2.0;\n    this.botStartX = (this.width - botWidth) / 2.0;\n    this.reset();\n  }\n  getMetrics() {\n    return {\n      x_min: this.xMin,\n      x_max: this.xMin + this.width,\n      width: this.width\n    };\n  }\n  renderToStave(x) {\n    const stave = this.checkStave();\n    const ctx = this.checkContext();\n    let start_x = x + this.topStartX;\n    let y = 0;\n    if (this.botGlyphs.length > 0) y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);else y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n    for (let i = 0; i < this.topGlyphs.length; ++i) {\n      const glyph = this.topGlyphs[i];\n      Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n      start_x += defined(glyph.getMetrics().width);\n    }\n    start_x = x + this.botStartX;\n    y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n    for (let i = 0; i < this.botGlyphs.length; ++i) {\n      const glyph = this.botGlyphs[i];\n      this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n      Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n      start_x += defined(glyph.getMetrics().width);\n    }\n  }\n}","map":{"version":3,"names":["Glyph","defined","TimeSignatureGlyph","constructor","timeSignature","topDigits","botDigits","code","point","options","_a","topGlyphs","botGlyphs","topWidth","height","i","length","timeSigType","topGlyph","push","getMetrics","width","Math","max","botWidth","botGlyph","lineShift","xMin","x_min","topStartX","botStartX","reset","x_max","renderToStave","x","stave","checkStave","ctx","checkContext","start_x","y","getYForLine","topLine","bottomLine","glyph","renderOutline","outline","scale","x_shift","placeGlyphOnLine","getLine"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/timesigglyph.js"],"sourcesContent":["import { Glyph } from './glyph.js';\nimport { defined } from './util.js';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n            height = Math.max(height, topGlyph.getMetrics().height);\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n            height = Math.max(height, botGlyph.getMetrics().height);\n        }\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}