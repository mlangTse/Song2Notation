{"ast":null,"code":"import { Note } from './note.js';\nexport class GlyphNote extends Note {\n  static get CATEGORY() {\n    return \"GlyphNote\";\n  }\n  constructor(glyph, noteStruct, options) {\n    super(noteStruct);\n    this.options = Object.assign({\n      ignoreTicks: false,\n      line: 2\n    }, options);\n    this.ignore_ticks = this.options.ignoreTicks;\n    this.setGlyph(glyph);\n  }\n  setGlyph(glyph) {\n    this.glyph = glyph;\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n  getBoundingBox() {\n    return this.glyph.getBoundingBox();\n  }\n  preFormat() {\n    if (!this.preFormatted && this.modifierContext) {\n      this.modifierContext.preFormat();\n    }\n    this.preFormatted = true;\n    return this;\n  }\n  drawModifiers() {\n    const ctx = this.checkContext();\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n    }\n  }\n  getGlyphWidth() {\n    return this.glyph.getMetrics().width;\n  }\n  draw() {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    this.setRendered();\n    this.applyStyle(ctx);\n    ctx.openGroup('glyphNote', this.getAttribute('id'));\n    const glyph = this.glyph;\n    if (!glyph.getContext()) {\n      glyph.setContext(ctx);\n    }\n    glyph.setStave(stave);\n    glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n    const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n    glyph.renderToStave(x);\n    this.drawModifiers();\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}","map":{"version":3,"names":["Note","GlyphNote","CATEGORY","constructor","glyph","noteStruct","options","Object","assign","ignoreTicks","line","ignore_ticks","setGlyph","setWidth","getMetrics","width","getBoundingBox","preFormat","preFormatted","modifierContext","drawModifiers","ctx","checkContext","i","modifiers","length","modifier","setContext","drawWithStyle","getGlyphWidth","draw","stave","checkStave","setRendered","applyStyle","openGroup","getAttribute","getContext","setStave","setYShift","getYForLine","getYForGlyphs","x","isCenterAligned","getAbsoluteX","getWidth","renderToStave","closeGroup","restoreStyle"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/glyphnote.js"],"sourcesContent":["import { Note } from './note.js';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return \"GlyphNote\";\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        this.ignore_ticks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    getGlyphWidth() {\n        return this.glyph.getMetrics().width;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}