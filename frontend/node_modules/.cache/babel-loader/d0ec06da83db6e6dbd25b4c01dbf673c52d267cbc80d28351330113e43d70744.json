{"ast":null,"code":"import { Font, FontStyle, FontWeight } from './font.js';\nimport { Glyph } from './glyph.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { isNote, isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nclass Stroke extends Modifier {\n  static get CATEGORY() {\n    return \"Stroke\";\n  }\n  static format(strokes, state) {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n    if (!strokes || strokes.length === 0) return false;\n    const strokeList = strokes.map(stroke => {\n      const note = stroke.getNote();\n      const index = stroke.checkIndex();\n      if (isStaveNote(note)) {\n        const {\n          line\n        } = note.getKeyProps()[index];\n        const shift = note.getLeftDisplacedHeadPx();\n        return {\n          line,\n          shift,\n          stroke\n        };\n      } else if (isTabNote(note)) {\n        const {\n          str: string\n        } = note.getPositions()[index];\n        return {\n          line: string,\n          shift: 0,\n          stroke\n        };\n      } else {\n        throw new RuntimeError('Internal', 'Unexpected instance.');\n      }\n    });\n    const strokeShift = left_shift;\n    const xShift = strokeList.reduce((xShift, _ref) => {\n      let {\n        stroke,\n        shift\n      } = _ref;\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n    state.left_shift += xShift;\n    return true;\n  }\n  constructor(type, options) {\n    super();\n    this.options = Object.assign({\n      all_voices: true\n    }, options);\n    this.all_voices = this.options.all_voices;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n    this.render_options = {\n      font_scale: Tables.NOTATION_FONT_SCALE\n    };\n    this.resetFont();\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n  getPosition() {\n    return this.position;\n  }\n  addEndNote(note) {\n    this.note_end = note;\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    const start = note.getModifierStartXY(this.position, this.index);\n    let ys = note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = note.checkStave().getSpacingBetweenLines();\n    const notes = this.checkModifierContext().getMembers(note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      const note = notes[i];\n      if (isNote(note)) {\n        ys = note.getYs();\n        for (let n = 0; n < ys.length; n++) {\n          if (this.note === notes[i] || this.all_voices) {\n            topY = Math.min(topY, ys[n]);\n            botY = Math.max(botY, ys[n]);\n          }\n        }\n      }\n    }\n    let arrow = '';\n    let arrow_shift_x = 0;\n    let arrow_y = 0;\n    let text_shift_x = 0;\n    let text_y = 0;\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        arrow_y = topY - line_space / 2 + 10;\n        botY += line_space / 2;\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + line_space / 2;\n        topY -= line_space / 2;\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (isStaveNote(note)) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (isStaveNote(note)) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space;\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n    let strokeLine = 'straight';\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      strokeLine = 'wiggly';\n      if (isStaveNote(note)) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return;\n    }\n    Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n      category: `stroke_${strokeLine}.${arrow}`\n    });\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText('R', x + text_shift_x, text_y);\n      ctx.restore();\n    }\n  }\n}\nStroke.Type = {\n  BRUSH_DOWN: 1,\n  BRUSH_UP: 2,\n  ROLL_DOWN: 3,\n  ROLL_UP: 4,\n  RASQUEDO_DOWN: 5,\n  RASQUEDO_UP: 6,\n  ARPEGGIO_DIRECTIONLESS: 7\n};\nStroke.TEXT_FONT = {\n  family: Font.SERIF,\n  size: Font.SIZE,\n  weight: FontWeight.BOLD,\n  style: FontStyle.ITALIC\n};\nexport { Stroke };","map":{"version":3,"names":["Font","FontStyle","FontWeight","Glyph","Modifier","Tables","isNote","isStaveNote","isTabNote","RuntimeError","Stroke","CATEGORY","format","strokes","state","left_shift","stroke_spacing","length","strokeList","map","stroke","note","getNote","index","checkIndex","line","getKeyProps","shift","getLeftDisplacedHeadPx","str","string","getPositions","strokeShift","xShift","reduce","_ref","setXShift","Math","max","getWidth","constructor","type","options","Object","assign","all_voices","position","Position","LEFT","render_options","font_scale","NOTATION_FONT_SCALE","resetFont","setWidth","getPosition","addEndNote","note_end","draw","ctx","checkContext","checkAttachedNote","setRendered","start","getModifierStartXY","ys","getYs","topY","y","botY","x","line_space","checkStave","getSpacingBetweenLines","notes","checkModifierContext","getMembers","getCategory","i","n","min","arrow","arrow_shift_x","arrow_y","text_shift_x","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","x_shift","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","fillRect","renderGlyph","category","save","setFont","textFont","fillText","restore","TEXT_FONT","family","SERIF","size","SIZE","weight","BOLD","style","ITALIC"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/strokes.js"],"sourcesContent":["import { Font, FontStyle, FontWeight } from './font.js';\nimport { Glyph } from './glyph.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { isNote, isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nclass Stroke extends Modifier {\n    static get CATEGORY() {\n        return \"Stroke\";\n    }\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        this.all_voices = this.options.all_voices;\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space;\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return;\n        }\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke_${strokeLine}.${arrow}`,\n        });\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7,\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\nexport { Stroke };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}