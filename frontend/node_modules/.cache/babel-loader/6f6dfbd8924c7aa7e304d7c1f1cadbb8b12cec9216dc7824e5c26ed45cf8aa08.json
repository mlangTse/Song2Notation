{"ast":null,"code":"import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nclass StaveTie extends Element {\n  static get CATEGORY() {\n    return \"StaveTie\";\n  }\n  constructor(notes, text) {\n    super();\n    this.setNotes(notes);\n    this.text = text;\n    this.render_options = {\n      cp1: 8,\n      cp2: 12,\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0\n    };\n    this.resetFont();\n  }\n  setDirection(direction) {\n    this.direction = direction;\n    return this;\n  }\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n    }\n    if (!notes.first_indices) {\n      notes.first_indices = [0];\n    }\n    if (!notes.last_indices) {\n      notes.last_indices = [0];\n    }\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n    }\n    this.notes = notes;\n    return this;\n  }\n  isPartial() {\n    return !this.notes.first_note || !this.notes.last_note;\n  }\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n    const ctx = this.checkContext();\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2;\n      cp2 = 8;\n    }\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n    const first_indices = this.notes.first_indices;\n    const last_indices = this.notes.last_indices;\n    this.applyStyle();\n    ctx.openGroup('stavetie', this.getAttribute('id'));\n    for (let i = 0; i < first_indices.length; ++i) {\n      const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n      }\n      const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n      const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.closeGroup();\n    this.restoreStyle();\n  }\n  renderText(first_x_px, last_x_px) {\n    var _a, _b, _c;\n    if (!this.text) return;\n    const ctx = this.checkContext();\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= ctx.measureText(this.text).width / 2;\n    const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n    if (stave) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n      ctx.restore();\n    }\n  }\n  getNotes() {\n    return this.notes;\n  }\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    const first_note = this.notes.first_note;\n    const last_note = this.notes.last_note;\n    let first_x_px = 0;\n    let last_x_px = 0;\n    let first_ys = [0];\n    let last_ys = [0];\n    let stem_direction = 0;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else if (last_note) {\n      const stave = last_note.checkStave();\n      first_x_px = stave.getTieStartX();\n      first_ys = last_note.getYs();\n      this.notes.first_indices = this.notes.last_indices;\n    }\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else if (first_note) {\n      const stave = first_note.checkStave();\n      last_x_px = stave.getTieEndX();\n      last_ys = first_note.getYs();\n      this.notes.last_indices = this.notes.first_indices;\n    }\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction\n    });\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { StaveTie };","map":{"version":3,"names":["Element","RuntimeError","StaveTie","CATEGORY","constructor","notes","text","setNotes","render_options","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","y_shift","tie_spacing","resetFont","setDirection","direction","first_note","last_note","first_indices","last_indices","length","isPartial","renderTie","params","first_ys","last_ys","ctx","checkContext","Math","abs","last_x_px","first_x_px","applyStyle","openGroup","getAttribute","i","cp_x","first_y_px","last_y_px","isNaN","top_cp_y","bottom_cp_y","beginPath","moveTo","quadraticCurveTo","closePath","fill","closeGroup","restoreStyle","renderText","_a","_b","_c","center_x","measureText","width","stave","checkStave","save","setFont","textFont","fillText","getYForTopText","restore","getNotes","draw","setRendered","stem_direction","getTieRightX","getStemDirection","getYs","getTieStartX","getTieLeftX","getTieEndX","TEXT_FONT","Object","assign"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/stavetie.js"],"sourcesContent":["import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nclass StaveTie extends Element {\n    static get CATEGORY() {\n        return \"StaveTie\";\n    }\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_indices = this.notes.first_indices;\n        const last_indices = this.notes.last_indices;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { StaveTie };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}