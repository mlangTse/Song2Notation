{"ast":null,"code":"import { Font, FontStyle, FontWeight } from './font.js';\nimport { Registry } from './registry.js';\nimport { defined, prefix } from './util.js';\nclass Element {\n  static get CATEGORY() {\n    return \"Element\";\n  }\n  static newID() {\n    return `auto${Element.ID++}`;\n  }\n  constructor() {\n    var _a;\n    this.children = [];\n    this.attrs = {\n      id: Element.newID(),\n      type: this.getCategory(),\n      class: ''\n    };\n    this.rendered = false;\n    (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n  }\n  addChildElement(child) {\n    this.children.push(child);\n    return this;\n  }\n  getCategory() {\n    return this.constructor.CATEGORY;\n  }\n  setStyle(style) {\n    this.style = style;\n    return this;\n  }\n  setGroupStyle(style) {\n    this.style = style;\n    this.children.forEach(child => child.setGroupStyle(style));\n    return this;\n  }\n  getStyle() {\n    return this.style;\n  }\n  applyStyle() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.context;\n    let style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getStyle();\n    if (!style) return this;\n    if (!context) return this;\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n  restoreStyle() {\n    let context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.context;\n    let style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getStyle();\n    if (!style) return this;\n    if (!context) return this;\n    context.restore();\n    return this;\n  }\n  drawWithStyle() {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n  hasClass(className) {\n    var _a;\n    if (!this.attrs.class) return false;\n    return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n  }\n  addClass(className) {\n    var _a;\n    if (this.hasClass(className)) return this;\n    if (!this.attrs.class) this.attrs.class = `${className}`;else this.attrs.class = `${this.attrs.class} ${className}`;\n    (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n      id: this.attrs.id,\n      name: 'class',\n      value: className,\n      oldValue: undefined\n    });\n    return this;\n  }\n  removeClass(className) {\n    var _a, _b;\n    if (!this.hasClass(className)) return this;\n    const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n    if (arr) {\n      arr.splice(arr.indexOf(className));\n      this.attrs.class = arr.join(' ');\n    }\n    (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n      id: this.attrs.id,\n      name: 'class',\n      value: undefined,\n      oldValue: className\n    });\n    return this;\n  }\n  onRegister(registry) {\n    this.registry = registry;\n    return this;\n  }\n  isRendered() {\n    return this.rendered;\n  }\n  setRendered() {\n    let rendered = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.rendered = rendered;\n    return this;\n  }\n  getAttributes() {\n    return this.attrs;\n  }\n  getAttribute(name) {\n    return this.attrs[name];\n  }\n  getSVGElement() {\n    let suffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const id = prefix(this.attrs.id + suffix);\n    const element = document.getElementById(id);\n    if (element) return element;\n  }\n  setAttribute(name, value) {\n    var _a;\n    const oldID = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n      id: oldID,\n      name,\n      value,\n      oldValue\n    });\n    return this;\n  }\n  getBoundingBox() {\n    return this.boundingBox;\n  }\n  getContext() {\n    return this.context;\n  }\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n  checkContext() {\n    return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n  }\n  set font(f) {\n    this.setFont(f);\n  }\n  get font() {\n    return Font.toCSSString(this.textFont);\n  }\n  setFont(font, size, weight, style) {\n    const defaultTextFont = this.constructor.TEXT_FONT;\n    const fontIsObject = typeof font === 'object';\n    const fontIsString = typeof font === 'string';\n    const fontIsUndefined = font === undefined;\n    const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n    if (fontIsObject) {\n      this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n    } else if (fontIsString && sizeWeightStyleAreUndefined) {\n      this.textFont = Font.fromCSSString(font);\n    } else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n      this.textFont = Object.assign({}, defaultTextFont);\n    } else {\n      this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n    }\n    return this;\n  }\n  getFont() {\n    if (!this.textFont) {\n      this.resetFont();\n    }\n    return Font.toCSSString(this.textFont);\n  }\n  resetFont() {\n    this.setFont();\n  }\n  get fontInfo() {\n    if (!this.textFont) {\n      this.resetFont();\n    }\n    return Object.assign({}, this.textFont);\n  }\n  set fontInfo(fontInfo) {\n    this.setFont(fontInfo);\n  }\n  setFontSize(size) {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n    return this;\n  }\n  getFontSize() {\n    return this.fontSize;\n  }\n  set fontSize(size) {\n    this.setFontSize(size);\n  }\n  get fontSize() {\n    let size = this.fontInfo.size;\n    if (typeof size === 'number') {\n      size = `${size}pt`;\n    }\n    return size;\n  }\n  get fontSizeInPoints() {\n    return Font.convertSizeToPointValue(this.fontSize);\n  }\n  get fontSizeInPixels() {\n    return Font.convertSizeToPixelValue(this.fontSize);\n  }\n  get fontStyle() {\n    return this.fontInfo.style;\n  }\n  set fontStyle(style) {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n  }\n  get fontWeight() {\n    return this.fontInfo.weight + '';\n  }\n  set fontWeight(weight) {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n  }\n}\nElement.ID = 1000;\nElement.TEXT_FONT = {\n  family: Font.SANS_SERIF,\n  size: Font.SIZE,\n  weight: FontWeight.NORMAL,\n  style: FontStyle.NORMAL\n};\nexport { Element };","map":{"version":3,"names":["Font","FontStyle","FontWeight","Registry","defined","prefix","Element","CATEGORY","newID","ID","constructor","_a","children","attrs","id","type","getCategory","class","rendered","getDefaultRegistry","register","addChildElement","child","push","setStyle","style","setGroupStyle","forEach","getStyle","applyStyle","context","arguments","length","undefined","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","className","split","indexOf","addClass","registry","onUpdate","name","value","oldValue","removeClass","_b","arr","splice","join","onRegister","isRendered","setRendered","getAttributes","getAttribute","getSVGElement","suffix","element","document","getElementById","setAttribute","oldID","getBoundingBox","boundingBox","getContext","setContext","font","f","setFont","toCSSString","textFont","size","weight","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","Object","assign","fromCSSString","validate","family","getFont","resetFont","fontInfo","setFontSize","getFontSize","fontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","fontStyle","fontWeight","SANS_SERIF","SIZE","NORMAL"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/element.js"],"sourcesContent":["import { Font, FontStyle, FontWeight } from './font.js';\nimport { Registry } from './registry.js';\nimport { defined, prefix } from './util.js';\nclass Element {\n    static get CATEGORY() {\n        return \"Element\";\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor() {\n        var _a;\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            type: this.getCategory(),\n            class: '',\n        };\n        this.rendered = false;\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    getStyle() {\n        return this.style;\n    }\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n    }\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    isRendered() {\n        return this.rendered;\n    }\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    getAttributes() {\n        return this.attrs;\n    }\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    setFont(font, size, weight, style) {\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    resetFont() {\n        this.setFont();\n    }\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    getFontSize() {\n        return this.fontSize;\n    }\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { Element };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,UAAU,QAAQ,WAAW;AACvD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,OAAO,EAAEC,MAAM,QAAQ,WAAW;AAC3C,MAAMC,OAAO,CAAC;EACV,WAAWC,QAAQA,CAAA,EAAG;IAClB,OAAO,SAAS;EACpB;EACA,OAAOC,KAAKA,CAAA,EAAG;IACX,OAAO,OAAOF,OAAO,CAACG,EAAE,EAAE,EAAE;EAChC;EACAC,WAAWA,CAAA,EAAG;IACV,IAAIC,EAAE;IACN,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG;MACTC,EAAE,EAAER,OAAO,CAACE,KAAK,CAAC,CAAC;MACnBO,IAAI,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;MACxBC,KAAK,EAAE;IACX,CAAC;IACD,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,CAACP,EAAE,GAAGR,QAAQ,CAACgB,kBAAkB,CAAC,CAAC,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACS,QAAQ,CAAC,IAAI,CAAC;EAC/F;EACAC,eAAeA,CAACC,KAAK,EAAE;IACnB,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACD,KAAK,CAAC;IACzB,OAAO,IAAI;EACf;EACAN,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACN,WAAW,CAACH,QAAQ;EACpC;EACAiB,QAAQA,CAACC,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,OAAO,IAAI;EACf;EACAC,aAAaA,CAACD,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACb,QAAQ,CAACe,OAAO,CAAEL,KAAK,IAAKA,KAAK,CAACI,aAAa,CAACD,KAAK,CAAC,CAAC;IAC5D,OAAO,IAAI;EACf;EACAG,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACH,KAAK;EACrB;EACAI,UAAUA,CAAA,EAAkD;IAAA,IAAjDC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI,CAACD,OAAO;IAAA,IAAEL,KAAK,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI,CAACH,QAAQ,CAAC,CAAC;IACtD,IAAI,CAACH,KAAK,EACN,OAAO,IAAI;IACf,IAAI,CAACK,OAAO,EACR,OAAO,IAAI;IACfA,OAAO,CAACI,IAAI,CAAC,CAAC;IACd,IAAIT,KAAK,CAACU,WAAW,EACjBL,OAAO,CAACM,cAAc,CAACX,KAAK,CAACU,WAAW,CAAC;IAC7C,IAAIV,KAAK,CAACY,UAAU,EAChBP,OAAO,CAACQ,aAAa,CAACb,KAAK,CAACY,UAAU,CAAC;IAC3C,IAAIZ,KAAK,CAACc,SAAS,EACfT,OAAO,CAACU,YAAY,CAACf,KAAK,CAACc,SAAS,CAAC;IACzC,IAAId,KAAK,CAACgB,WAAW,EACjBX,OAAO,CAACY,cAAc,CAACjB,KAAK,CAACgB,WAAW,CAAC;IAC7C,IAAIhB,KAAK,CAACkB,SAAS,EACfb,OAAO,CAACc,YAAY,CAACnB,KAAK,CAACkB,SAAS,CAAC;IACzC,OAAO,IAAI;EACf;EACAE,YAAYA,CAAA,EAAkD;IAAA,IAAjDf,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI,CAACD,OAAO;IAAA,IAAEL,KAAK,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI,CAACH,QAAQ,CAAC,CAAC;IACxD,IAAI,CAACH,KAAK,EACN,OAAO,IAAI;IACf,IAAI,CAACK,OAAO,EACR,OAAO,IAAI;IACfA,OAAO,CAACgB,OAAO,CAAC,CAAC;IACjB,OAAO,IAAI;EACf;EACAC,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,IAAI,CAACnB,UAAU,CAAC,CAAC;IACjB,IAAI,CAACoB,IAAI,CAAC,CAAC;IACX,IAAI,CAACJ,YAAY,CAAC,CAAC;EACvB;EACAK,QAAQA,CAACC,SAAS,EAAE;IAChB,IAAIxC,EAAE;IACN,IAAI,CAAC,IAAI,CAACE,KAAK,CAACI,KAAK,EACjB,OAAO,KAAK;IAChB,OAAO,CAAC,CAACN,EAAE,GAAG,IAAI,CAACE,KAAK,CAACI,KAAK,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACyC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAACF,SAAS,CAAC,KAAK,CAAC,CAAC;EAChH;EACAG,QAAQA,CAACH,SAAS,EAAE;IAChB,IAAIxC,EAAE;IACN,IAAI,IAAI,CAACuC,QAAQ,CAACC,SAAS,CAAC,EACxB,OAAO,IAAI;IACf,IAAI,CAAC,IAAI,CAACtC,KAAK,CAACI,KAAK,EACjB,IAAI,CAACJ,KAAK,CAACI,KAAK,GAAG,GAAGkC,SAAS,EAAE,CAAC,KAElC,IAAI,CAACtC,KAAK,CAACI,KAAK,GAAG,GAAG,IAAI,CAACJ,KAAK,CAACI,KAAK,IAAIkC,SAAS,EAAE;IACzD,CAACxC,EAAE,GAAG,IAAI,CAAC4C,QAAQ,MAAM,IAAI,IAAI5C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC6C,QAAQ,CAAC;MAClE1C,EAAE,EAAE,IAAI,CAACD,KAAK,CAACC,EAAE;MACjB2C,IAAI,EAAE,OAAO;MACbC,KAAK,EAAEP,SAAS;MAChBQ,QAAQ,EAAE1B;IACd,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EACA2B,WAAWA,CAACT,SAAS,EAAE;IACnB,IAAIxC,EAAE,EAAEkD,EAAE;IACV,IAAI,CAAC,IAAI,CAACX,QAAQ,CAACC,SAAS,CAAC,EACzB,OAAO,IAAI;IACf,MAAMW,GAAG,GAAG,CAACnD,EAAE,GAAG,IAAI,CAACE,KAAK,CAACI,KAAK,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACyC,KAAK,CAAC,GAAG,CAAC;IACtF,IAAIU,GAAG,EAAE;MACLA,GAAG,CAACC,MAAM,CAACD,GAAG,CAACT,OAAO,CAACF,SAAS,CAAC,CAAC;MAClC,IAAI,CAACtC,KAAK,CAACI,KAAK,GAAG6C,GAAG,CAACE,IAAI,CAAC,GAAG,CAAC;IACpC;IACA,CAACH,EAAE,GAAG,IAAI,CAACN,QAAQ,MAAM,IAAI,IAAIM,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,QAAQ,CAAC;MAClE1C,EAAE,EAAE,IAAI,CAACD,KAAK,CAACC,EAAE;MACjB2C,IAAI,EAAE,OAAO;MACbC,KAAK,EAAEzB,SAAS;MAChB0B,QAAQ,EAAER;IACd,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EACAc,UAAUA,CAACV,QAAQ,EAAE;IACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,OAAO,IAAI;EACf;EACAW,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAAChD,QAAQ;EACxB;EACAiD,WAAWA,CAAA,EAAkB;IAAA,IAAjBjD,QAAQ,GAAAa,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IACvB,IAAI,CAACb,QAAQ,GAAGA,QAAQ;IACxB,OAAO,IAAI;EACf;EACAkD,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACvD,KAAK;EACrB;EACAwD,YAAYA,CAACZ,IAAI,EAAE;IACf,OAAO,IAAI,CAAC5C,KAAK,CAAC4C,IAAI,CAAC;EAC3B;EACAa,aAAaA,CAAA,EAAc;IAAA,IAAbC,MAAM,GAAAxC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACrB,MAAMjB,EAAE,GAAGT,MAAM,CAAC,IAAI,CAACQ,KAAK,CAACC,EAAE,GAAGyD,MAAM,CAAC;IACzC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC5D,EAAE,CAAC;IAC3C,IAAI0D,OAAO,EACP,OAAOA,OAAO;EACtB;EACAG,YAAYA,CAAClB,IAAI,EAAEC,KAAK,EAAE;IACtB,IAAI/C,EAAE;IACN,MAAMiE,KAAK,GAAG,IAAI,CAAC/D,KAAK,CAACC,EAAE;IAC3B,MAAM6C,QAAQ,GAAG,IAAI,CAAC9C,KAAK,CAAC4C,IAAI,CAAC;IACjC,IAAI,CAAC5C,KAAK,CAAC4C,IAAI,CAAC,GAAGC,KAAK;IACxB,CAAC/C,EAAE,GAAG,IAAI,CAAC4C,QAAQ,MAAM,IAAI,IAAI5C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC6C,QAAQ,CAAC;MAAE1C,EAAE,EAAE8D,KAAK;MAAEnB,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC3G,OAAO,IAAI;EACf;EACAkB,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,WAAW;EAC3B;EACAC,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACjD,OAAO;EACvB;EACAkD,UAAUA,CAAClD,OAAO,EAAE;IAChB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,OAAO,IAAI;EACf;EACAkB,YAAYA,CAAA,EAAG;IACX,OAAO5C,OAAO,CAAC,IAAI,CAAC0B,OAAO,EAAE,WAAW,EAAE,4CAA4C,CAAC;EAC3F;EACA,IAAImD,IAAIA,CAACC,CAAC,EAAE;IACR,IAAI,CAACC,OAAO,CAACD,CAAC,CAAC;EACnB;EACA,IAAID,IAAIA,CAAA,EAAG;IACP,OAAOjF,IAAI,CAACoF,WAAW,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC1C;EACAF,OAAOA,CAACF,IAAI,EAAEK,IAAI,EAAEC,MAAM,EAAE9D,KAAK,EAAE;IAC/B,MAAM+D,eAAe,GAAG,IAAI,CAAC9E,WAAW,CAAC+E,SAAS;IAClD,MAAMC,YAAY,GAAG,OAAOT,IAAI,KAAK,QAAQ;IAC7C,MAAMU,YAAY,GAAG,OAAOV,IAAI,KAAK,QAAQ;IAC7C,MAAMW,eAAe,GAAGX,IAAI,KAAKhD,SAAS;IAC1C,MAAM4D,2BAA2B,GAAGP,IAAI,KAAKrD,SAAS,IAAIsD,MAAM,KAAKtD,SAAS,IAAIR,KAAK,KAAKQ,SAAS;IACrG,IAAIyD,YAAY,EAAE;MACd,IAAI,CAACL,QAAQ,GAAGS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,eAAe,CAAC,EAAEP,IAAI,CAAC;IAC3E,CAAC,MACI,IAAIU,YAAY,IAAIE,2BAA2B,EAAE;MAClD,IAAI,CAACR,QAAQ,GAAGrF,IAAI,CAACgG,aAAa,CAACf,IAAI,CAAC;IAC5C,CAAC,MACI,IAAIW,eAAe,IAAIC,2BAA2B,EAAE;MACrD,IAAI,CAACR,QAAQ,GAAGS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,eAAe,CAAC;IACtD,CAAC,MACI;MACD,IAAI,CAACH,QAAQ,GAAGrF,IAAI,CAACiG,QAAQ,CAAChB,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGO,eAAe,CAACU,MAAM,EAAEZ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGE,eAAe,CAACF,IAAI,EAAEC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGC,eAAe,CAACD,MAAM,EAAE9D,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG+D,eAAe,CAAC/D,KAAK,CAAC;IAC/S;IACA,OAAO,IAAI;EACf;EACA0E,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACd,QAAQ,EAAE;MAChB,IAAI,CAACe,SAAS,CAAC,CAAC;IACpB;IACA,OAAOpG,IAAI,CAACoF,WAAW,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC1C;EACAe,SAASA,CAAA,EAAG;IACR,IAAI,CAACjB,OAAO,CAAC,CAAC;EAClB;EACA,IAAIkB,QAAQA,CAAA,EAAG;IACX,IAAI,CAAC,IAAI,CAAChB,QAAQ,EAAE;MAChB,IAAI,CAACe,SAAS,CAAC,CAAC;IACpB;IACA,OAAON,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACV,QAAQ,CAAC;EAC3C;EACA,IAAIgB,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAI,CAAClB,OAAO,CAACkB,QAAQ,CAAC;EAC1B;EACAC,WAAWA,CAAChB,IAAI,EAAE;IACd,MAAMe,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAAClB,OAAO,CAACkB,QAAQ,CAACH,MAAM,EAAEZ,IAAI,EAAEe,QAAQ,CAACd,MAAM,EAAEc,QAAQ,CAAC5E,KAAK,CAAC;IACpE,OAAO,IAAI;EACf;EACA8E,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,QAAQ;EACxB;EACA,IAAIA,QAAQA,CAAClB,IAAI,EAAE;IACf,IAAI,CAACgB,WAAW,CAAChB,IAAI,CAAC;EAC1B;EACA,IAAIkB,QAAQA,CAAA,EAAG;IACX,IAAIlB,IAAI,GAAG,IAAI,CAACe,QAAQ,CAACf,IAAI;IAC7B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC1BA,IAAI,GAAG,GAAGA,IAAI,IAAI;IACtB;IACA,OAAOA,IAAI;EACf;EACA,IAAImB,gBAAgBA,CAAA,EAAG;IACnB,OAAOzG,IAAI,CAAC0G,uBAAuB,CAAC,IAAI,CAACF,QAAQ,CAAC;EACtD;EACA,IAAIG,gBAAgBA,CAAA,EAAG;IACnB,OAAO3G,IAAI,CAAC4G,uBAAuB,CAAC,IAAI,CAACJ,QAAQ,CAAC;EACtD;EACA,IAAIK,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACR,QAAQ,CAAC5E,KAAK;EAC9B;EACA,IAAIoF,SAASA,CAACpF,KAAK,EAAE;IACjB,MAAM4E,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAAClB,OAAO,CAACkB,QAAQ,CAACH,MAAM,EAAEG,QAAQ,CAACf,IAAI,EAAEe,QAAQ,CAACd,MAAM,EAAE9D,KAAK,CAAC;EACxE;EACA,IAAIqF,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACT,QAAQ,CAACd,MAAM,GAAG,EAAE;EACpC;EACA,IAAIuB,UAAUA,CAACvB,MAAM,EAAE;IACnB,MAAMc,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAAClB,OAAO,CAACkB,QAAQ,CAACH,MAAM,EAAEG,QAAQ,CAACf,IAAI,EAAEC,MAAM,EAAEc,QAAQ,CAAC5E,KAAK,CAAC;EACxE;AACJ;AACAnB,OAAO,CAACG,EAAE,GAAG,IAAI;AACjBH,OAAO,CAACmF,SAAS,GAAG;EAChBS,MAAM,EAAElG,IAAI,CAAC+G,UAAU;EACvBzB,IAAI,EAAEtF,IAAI,CAACgH,IAAI;EACfzB,MAAM,EAAErF,UAAU,CAAC+G,MAAM;EACzBxF,KAAK,EAAExB,SAAS,CAACgH;AACrB,CAAC;AACD,SAAS3G,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}