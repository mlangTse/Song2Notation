{"ast":null,"code":"import { Glyph } from './glyph.js';\nimport { GraceNote } from './gracenote.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote } from './typeguard.js';\nexport class Tremolo extends Modifier {\n  static get CATEGORY() {\n    return \"Tremolo\";\n  }\n  constructor(num) {\n    super();\n    this.num = num;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'tremolo1';\n    this.y_spacing_scale = 1;\n    this.extra_stroke_scale = 1;\n  }\n  draw() {\n    var _a;\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    const stemDirection = note.getStemDirection();\n    const start = note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    const gn = isGraceNote(note);\n    const scale = gn ? GraceNote.SCALE : 1;\n    const category = `tremolo.${gn ? 'grace' : 'default'}`;\n    const musicFont = Tables.currentMusicFont();\n    let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n    y_spacing *= this.y_spacing_scale;\n    const height = this.num * y_spacing;\n    let y = note.getStemExtents().baseY - height;\n    if (stemDirection < 0) {\n      y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n    } else {\n      y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n    }\n    const fontScale = (_a = musicFont.lookupMetric(`${category}.point`)) !== null && _a !== void 0 ? _a : Note.getPoint(gn ? 'grace' : 'default');\n    x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(ctx, x, y, fontScale, this.code, {\n        category,\n        scale: this.extra_stroke_scale\n      });\n      y += y_spacing;\n    }\n  }\n}","map":{"version":3,"names":["Glyph","GraceNote","Modifier","Note","Stem","Tables","isGraceNote","Tremolo","CATEGORY","constructor","num","position","Position","CENTER","code","y_spacing_scale","extra_stroke_scale","draw","_a","ctx","checkContext","note","checkAttachedNote","setRendered","stemDirection","getStemDirection","start","getModifierStartXY","index","x","gn","scale","SCALE","category","musicFont","currentMusicFont","y_spacing","lookupMetric","height","y","getStemExtents","baseY","fontScale","getPoint","UP","i","renderGlyph"],"sources":["/Users/lang/Documents/code/Song2Notation/frontend/node_modules/vexflow/build/esm/src/tremolo.js"],"sourcesContent":["import { Glyph } from './glyph.js';\nimport { GraceNote } from './gracenote.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote } from './typeguard.js';\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return \"Tremolo\";\n    }\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = (_a = musicFont.lookupMetric(`${category}.point`)) !== null && _a !== void 0 ? _a : Note.getPoint(gn ? 'grace' : 'default');\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}